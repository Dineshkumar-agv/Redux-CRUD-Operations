{"version":3,"sources":["features/User.js","features/Users.js","FakeData.js","App.js","index.js"],"names":["initialState","name","age","email","userSlice","createSlice","value","reducers","login","state","action","payload","logout","actions","usersSlice","id","username","addUser","push","deleteUser","filter","user","updateUserName","map","App","dispatch","useDispatch","userList","useSelector","users","useState","setName","newusername","setNewUsername","className","type","placeholder","onChange","event","target","onClick","length","store","configureStore","reducer","userReducer","usersReducer","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.72d85fb2.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { value: { name: \"\", age: \"0\", email: \"\" } };\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: { value: { name: \"\", age: \"0\", email: \"\" } },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    logout: (state, action) => {\r\n      state.value = initialState.value;\r\n    }\r\n  }\r\n});\r\nexport const { login, logout } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { UsersData } from \"../FakeData\";\r\n\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: { value: UsersData },\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      state.value.push(action.payload);\r\n    },\r\n    deleteUser: (state, action) => {\r\n      state.value = state.value.filter((user) => user.id !== action.payload.id);\r\n    },\r\n    updateUserName: (state, action) => {\r\n      state.value.map((user) => {\r\n        if (user.id === action.payload.id) {\r\n          user.username = action.payload.username;\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\nexport const { addUser, deleteUser, updateUserName } = usersSlice.actions;\r\nexport default usersSlice.reducer;\r\n","export const UsersData = [\r\n  {\r\n    id: 1,\r\n    name: \"Leanne Graham\",\r\n    username: \"Bret\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Ervin Howell\",\r\n    username: \"Antonette\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Clementine Bauch\",\r\n    username: \"clementine\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Patricia Lebsack\",\r\n    username: \"Karianne\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Chelsey Dietrich\",\r\n    username: \"Kamren\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Jake Runolfsdottir V\",\r\n    username: \"Leopoldo_Corkery\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Mrs. Dennis Schulist\",\r\n    username: \"Karley_Dach\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Kurtis Weissnat\",\r\n    username: \"Elwyn.Skiles\"\r\n  }\r\n];\r\n","import \"./styles.css\";\nimport Profile from \"./components/Profile\";\nimport Login from \"./components/Login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, deleteUser, updateUserName } from \"./features/Users\";\nimport { useState } from \"react\";\nexport default function App() {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.users.value);\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [newusername, setNewUsername] = useState(\"\");\n  return (\n    <div className=\"App\">\n      {/* <Profile />\n      <Login /> */}{\" \"}\n      <div className=\"addUser\">\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"User Name\"\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            dispatch(\n              addUser({\n                id: userList[userList.length - 1].id + 1,\n                name: name,\n                username: username\n              })\n            );\n          }}\n        >\n          Add User\n        </button>\n      </div>\n      <div className=\"displayUsers\">\n        {userList.map((user) => {\n          return (\n            <div>\n              <h1> {user.name}</h1>\n              <h1> {user.username}</h1>\n\n              <input\n                type=\"text\"\n                placeholder=\"New User Name\"\n                onChange={(event) => {\n                  setNewUsername(event.target.value);\n                }}\n              />\n              <button\n                onClick={() => {\n                  dispatch(\n                    updateUserName({\n                      id: user.id,\n                      username: newusername\n                    })\n                  );\n                }}\n              >\n                Update UserName\n              </button>\n              <button\n                onClick={() => {\n                  dispatch(\n                    deleteUser({\n                      id: user.id\n                    })\n                  );\n                }}\n              >\n                Delete User\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport userReducer from \"./features/User\";\nimport usersReducer from \"./features/Users\";\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n    users: usersReducer\n  }\n});\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}